State 7 conflicts: 10 shift/reduce
State 10 conflicts: 10 shift/reduce
State 142 conflicts: 10 shift/reduce
State 144 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 program: TOKEN_INT TOKEN_MAIN TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE body TOKEN_RIGHT_BRACE

    2 body: statements

    3 statements: /* empty */
    4           | statements statement
    5           | statement
    6           | error TOKEN_SEMICOLON

    7 declaration: datatype var_list TOKEN_SEMICOLON

    8 datatype: TOKEN_INT
    9         | TOKEN_CHAR
   10         | TOKEN_FLOAT
   11         | TOKEN_DOUBLE

   12 var_list: var_declaration
   13         | var_list TOKEN_COMMA var_declaration

   14 var_declaration: TOKEN_IDENTIFIER
   15                | TOKEN_IDENTIFIER TOKEN_ASSIGN expr
   16                | array_declaration

   17 array_declaration: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET TOKEN_NUMBER TOKEN_RIGHT_BRACKET

   18 statement: simple_statement
   19          | compound_statement

   20 simple_statement: assignment TOKEN_SEMICOLON
   21                 | TOKEN_BREAK TOKEN_SEMICOLON
   22                 | TOKEN_CONTINUE TOKEN_SEMICOLON
   23                 | return_stmt

   24 compound_statement: conditional
   25                   | loop
   26                   | switch_stmt
   27                   | block

   28 block: TOKEN_LEFT_BRACE statements TOKEN_RIGHT_BRACE

   29 assignment: TOKEN_IDENTIFIER TOKEN_ASSIGN expr
   30           | TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET TOKEN_ASSIGN expr

   31 expr: or_expr

   32 or_expr: and_expr
   33        | or_expr TOKEN_LOGICAL_OR and_expr

   34 and_expr: rel_expr
   35         | and_expr TOKEN_LOGICAL_AND rel_expr

   36 rel_expr: add_expr
   37         | rel_expr relational_op add_expr

   38 add_expr: mult_expr
   39         | add_expr TOKEN_PLUS mult_expr
   40         | add_expr TOKEN_MINUS mult_expr

   41 mult_expr: unary_expr
   42          | mult_expr TOKEN_MULTIPLY unary_expr
   43          | mult_expr TOKEN_DIVIDE unary_expr
   44          | mult_expr TOKEN_MODULO unary_expr

   45 unary_expr: primary_expr
   46           | TOKEN_LOGICAL_NOT unary_expr

   47 primary_expr: TOKEN_NUMBER
   48             | TOKEN_CHAR_LITERAL
   49             | TOKEN_IDENTIFIER
   50             | TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET
   51             | TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN

   52 relational_op: TOKEN_EQUAL
   53              | TOKEN_NOT_EQUAL
   54              | TOKEN_LESS_THAN
   55              | TOKEN_LESS_EQUAL
   56              | TOKEN_GREATER_THAN
   57              | TOKEN_GREATER_EQUAL

   58 conditional: if_stmt
   59            | if_else_stmt

   60 if_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement

   61 if_else_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement TOKEN_ELSE statement

   62 loop: while_loop
   63     | for_loop
   64     | do_while_loop

   65 while_loop: TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON expr TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN statement

   67 for_init: /* empty */
   68         | assignment
   69         | declaration

   70 do_while_loop: TOKEN_DO statement TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_SEMICOLON

   71 switch_stmt: TOKEN_SWITCH TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE case_statements TOKEN_RIGHT_BRACE

   72 case_statements: /* empty */
   73                | case_statements TOKEN_CASE TOKEN_NUMBER TOKEN_COLON statements
   74                | case_statements TOKEN_DEFAULT TOKEN_COLON statements

   75 return_stmt: TOKEN_RETURN expr TOKEN_SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256) 6
TOKEN_NUMBER (258) 17 47 73
TOKEN_CHAR_LITERAL (259) 48
TOKEN_IDENTIFIER (260) 14 15 17 29 30 49 50
TOKEN_GREATER_THAN (261) 56
TOKEN_LESS_THAN (262) 54
TOKEN_EQUAL (263) 52
TOKEN_ASSIGN (264) 15 29 30
TOKEN_LESS_EQUAL (265) 55
TOKEN_GREATER_EQUAL (266) 57
TOKEN_LEFT_PAREN (267) 1 51 60 61 65 66 70 71
TOKEN_RIGHT_PAREN (268) 1 51 60 61 65 66 70 71
TOKEN_LEFT_BRACE (269) 1 28 71
TOKEN_RIGHT_BRACE (270) 1 28 71
TOKEN_LEFT_BRACKET (271) 17 30 50
TOKEN_RIGHT_BRACKET (272) 17 30 50
TOKEN_PLUS (273) 39
TOKEN_MINUS (274) 40
TOKEN_MULTIPLY (275) 42
TOKEN_DIVIDE (276) 43
TOKEN_MODULO (277) 44
TOKEN_COMMA (278) 13
TOKEN_SEMICOLON (279) 6 7 20 21 22 66 70 75
TOKEN_COLON (280) 73 74
TOKEN_INT (281) 1 8
TOKEN_CHAR (282) 9
TOKEN_DOUBLE (283) 11
TOKEN_FLOAT (284) 10
TOKEN_RETURN (285) 75
TOKEN_BREAK (286) 21
TOKEN_CONTINUE (287) 22
TOKEN_SWITCH (288) 71
TOKEN_CASE (289) 73
TOKEN_WHILE (290) 65 70
TOKEN_DO (291) 70
TOKEN_IF (292) 60 61
TOKEN_FOR (293) 66
TOKEN_ELSE (294) 61
TOKEN_DEFAULT (295) 74
TOKEN_MAIN (296) 1
TOKEN_LOGICAL_OR (297) 33
TOKEN_LOGICAL_AND (298) 35
TOKEN_NOT_EQUAL (299) 53
TOKEN_LOGICAL_NOT (300) 46
LOWER_THAN_ELSE (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
body (49)
    on left: 2, on right: 1
statements (50)
    on left: 3 4 5 6, on right: 2 4 28 73 74
declaration (51)
    on left: 7, on right: 69
datatype (52)
    on left: 8 9 10 11, on right: 7
var_list (53)
    on left: 12 13, on right: 7 13
var_declaration (54)
    on left: 14 15 16, on right: 12 13
array_declaration (55)
    on left: 17, on right: 16
statement (56)
    on left: 18 19, on right: 4 5 60 61 65 66 70
simple_statement (57)
    on left: 20 21 22 23, on right: 18
compound_statement (58)
    on left: 24 25 26 27, on right: 19
block (59)
    on left: 28, on right: 27
assignment (60)
    on left: 29 30, on right: 20 66 68
expr (61)
    on left: 31, on right: 15 29 30 50 51 60 61 65 66 70 71 75
or_expr (62)
    on left: 32 33, on right: 31 33
and_expr (63)
    on left: 34 35, on right: 32 33 35
rel_expr (64)
    on left: 36 37, on right: 34 35 37
add_expr (65)
    on left: 38 39 40, on right: 36 37 39 40
mult_expr (66)
    on left: 41 42 43 44, on right: 38 39 40 42 43 44
unary_expr (67)
    on left: 45 46, on right: 41 42 43 44 46
primary_expr (68)
    on left: 47 48 49 50 51, on right: 45
relational_op (69)
    on left: 52 53 54 55 56 57, on right: 37
conditional (70)
    on left: 58 59, on right: 24
if_stmt (71)
    on left: 60, on right: 58
if_else_stmt (72)
    on left: 61, on right: 59
loop (73)
    on left: 62 63 64, on right: 25
while_loop (74)
    on left: 65, on right: 62
for_loop (75)
    on left: 66, on right: 63
for_init (76)
    on left: 67 68 69, on right: 66
do_while_loop (77)
    on left: 70, on right: 64
switch_stmt (78)
    on left: 71, on right: 26
case_statements (79)
    on left: 72 73 74, on right: 71 73 74
return_stmt (80)
    on left: 75, on right: 23


state 0

    0 $accept: . program $end

    TOKEN_INT  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TOKEN_INT . TOKEN_MAIN TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE body TOKEN_RIGHT_BRACE

    TOKEN_MAIN  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: TOKEN_INT TOKEN_MAIN . TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE body TOKEN_RIGHT_BRACE

    TOKEN_LEFT_PAREN  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: TOKEN_INT TOKEN_MAIN TOKEN_LEFT_PAREN . TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE body TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_PAREN  shift, and go to state 6


state 6

    1 program: TOKEN_INT TOKEN_MAIN TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN . TOKEN_LEFT_BRACE body TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 7


state 7

    1 program: TOKEN_INT TOKEN_MAIN TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE . body TOKEN_RIGHT_BRACE

    error             shift, and go to state 8
    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    TOKEN_IDENTIFIER   [reduce using rule 3 (statements)]
    TOKEN_LEFT_BRACE   [reduce using rule 3 (statements)]
    TOKEN_RIGHT_BRACE  reduce using rule 3 (statements)
    TOKEN_RETURN       [reduce using rule 3 (statements)]
    TOKEN_BREAK        [reduce using rule 3 (statements)]
    TOKEN_CONTINUE     [reduce using rule 3 (statements)]
    TOKEN_SWITCH       [reduce using rule 3 (statements)]
    TOKEN_WHILE        [reduce using rule 3 (statements)]
    TOKEN_DO           [reduce using rule 3 (statements)]
    TOKEN_IF           [reduce using rule 3 (statements)]
    TOKEN_FOR          [reduce using rule 3 (statements)]

    body                go to state 19
    statements          go to state 20
    statement           go to state 21
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 8

    6 statements: error . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 35


state 9

   29 assignment: TOKEN_IDENTIFIER . TOKEN_ASSIGN expr
   30           | TOKEN_IDENTIFIER . TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET TOKEN_ASSIGN expr

    TOKEN_ASSIGN        shift, and go to state 36
    TOKEN_LEFT_BRACKET  shift, and go to state 37


state 10

   28 block: TOKEN_LEFT_BRACE . statements TOKEN_RIGHT_BRACE

    error             shift, and go to state 8
    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    TOKEN_IDENTIFIER   [reduce using rule 3 (statements)]
    TOKEN_LEFT_BRACE   [reduce using rule 3 (statements)]
    TOKEN_RIGHT_BRACE  reduce using rule 3 (statements)
    TOKEN_RETURN       [reduce using rule 3 (statements)]
    TOKEN_BREAK        [reduce using rule 3 (statements)]
    TOKEN_CONTINUE     [reduce using rule 3 (statements)]
    TOKEN_SWITCH       [reduce using rule 3 (statements)]
    TOKEN_WHILE        [reduce using rule 3 (statements)]
    TOKEN_DO           [reduce using rule 3 (statements)]
    TOKEN_IF           [reduce using rule 3 (statements)]
    TOKEN_FOR          [reduce using rule 3 (statements)]

    statements          go to state 38
    statement           go to state 21
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 11

   75 return_stmt: TOKEN_RETURN . expr TOKEN_SEMICOLON

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 44
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 12

   21 simple_statement: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 52


state 13

   22 simple_statement: TOKEN_CONTINUE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 53


state 14

   71 switch_stmt: TOKEN_SWITCH . TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE case_statements TOKEN_RIGHT_BRACE

    TOKEN_LEFT_PAREN  shift, and go to state 54


state 15

   65 while_loop: TOKEN_WHILE . TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement

    TOKEN_LEFT_PAREN  shift, and go to state 55


state 16

   70 do_while_loop: TOKEN_DO . statement TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    statement           go to state 56
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 17

   60 if_stmt: TOKEN_IF . TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement
   61 if_else_stmt: TOKEN_IF . TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement TOKEN_ELSE statement

    TOKEN_LEFT_PAREN  shift, and go to state 57


state 18

   66 for_loop: TOKEN_FOR . TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON expr TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN statement

    TOKEN_LEFT_PAREN  shift, and go to state 58


state 19

    1 program: TOKEN_INT TOKEN_MAIN TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE body . TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_BRACE  shift, and go to state 59


state 20

    2 body: statements .
    4 statements: statements . statement

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    $default  reduce using rule 2 (body)

    statement           go to state 60
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 21

    5 statements: statement .

    $default  reduce using rule 5 (statements)


state 22

   18 statement: simple_statement .

    $default  reduce using rule 18 (statement)


state 23

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


state 24

   27 compound_statement: block .

    $default  reduce using rule 27 (compound_statement)


state 25

   20 simple_statement: assignment . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 61


state 26

   24 compound_statement: conditional .

    $default  reduce using rule 24 (compound_statement)


state 27

   58 conditional: if_stmt .

    $default  reduce using rule 58 (conditional)


state 28

   59 conditional: if_else_stmt .

    $default  reduce using rule 59 (conditional)


state 29

   25 compound_statement: loop .

    $default  reduce using rule 25 (compound_statement)


state 30

   62 loop: while_loop .

    $default  reduce using rule 62 (loop)


state 31

   63 loop: for_loop .

    $default  reduce using rule 63 (loop)


state 32

   64 loop: do_while_loop .

    $default  reduce using rule 64 (loop)


state 33

   26 compound_statement: switch_stmt .

    $default  reduce using rule 26 (compound_statement)


state 34

   23 simple_statement: return_stmt .

    $default  reduce using rule 23 (simple_statement)


state 35

    6 statements: error TOKEN_SEMICOLON .

    $default  reduce using rule 6 (statements)


state 36

   29 assignment: TOKEN_IDENTIFIER TOKEN_ASSIGN . expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 62
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 37

   30 assignment: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET . expr TOKEN_RIGHT_BRACKET TOKEN_ASSIGN expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 63
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 38

    4 statements: statements . statement
   28 block: TOKEN_LEFT_BRACE statements . TOKEN_RIGHT_BRACE

    TOKEN_IDENTIFIER   shift, and go to state 9
    TOKEN_LEFT_BRACE   shift, and go to state 10
    TOKEN_RIGHT_BRACE  shift, and go to state 64
    TOKEN_RETURN       shift, and go to state 11
    TOKEN_BREAK        shift, and go to state 12
    TOKEN_CONTINUE     shift, and go to state 13
    TOKEN_SWITCH       shift, and go to state 14
    TOKEN_WHILE        shift, and go to state 15
    TOKEN_DO           shift, and go to state 16
    TOKEN_IF           shift, and go to state 17
    TOKEN_FOR          shift, and go to state 18

    statement           go to state 60
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 39

   47 primary_expr: TOKEN_NUMBER .

    $default  reduce using rule 47 (primary_expr)


state 40

   48 primary_expr: TOKEN_CHAR_LITERAL .

    $default  reduce using rule 48 (primary_expr)


state 41

   49 primary_expr: TOKEN_IDENTIFIER .
   50             | TOKEN_IDENTIFIER . TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET

    TOKEN_LEFT_BRACKET  shift, and go to state 65

    $default  reduce using rule 49 (primary_expr)


state 42

   51 primary_expr: TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 66
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 43

   46 unary_expr: TOKEN_LOGICAL_NOT . unary_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    unary_expr    go to state 67
    primary_expr  go to state 51


state 44

   75 return_stmt: TOKEN_RETURN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 68


state 45

   31 expr: or_expr .
   33 or_expr: or_expr . TOKEN_LOGICAL_OR and_expr

    TOKEN_LOGICAL_OR  shift, and go to state 69

    $default  reduce using rule 31 (expr)


state 46

   32 or_expr: and_expr .
   35 and_expr: and_expr . TOKEN_LOGICAL_AND rel_expr

    TOKEN_LOGICAL_AND  shift, and go to state 70

    $default  reduce using rule 32 (or_expr)


state 47

   34 and_expr: rel_expr .
   37 rel_expr: rel_expr . relational_op add_expr

    TOKEN_GREATER_THAN   shift, and go to state 71
    TOKEN_LESS_THAN      shift, and go to state 72
    TOKEN_EQUAL          shift, and go to state 73
    TOKEN_LESS_EQUAL     shift, and go to state 74
    TOKEN_GREATER_EQUAL  shift, and go to state 75
    TOKEN_NOT_EQUAL      shift, and go to state 76

    $default  reduce using rule 34 (and_expr)

    relational_op  go to state 77


state 48

   36 rel_expr: add_expr .
   39 add_expr: add_expr . TOKEN_PLUS mult_expr
   40         | add_expr . TOKEN_MINUS mult_expr

    TOKEN_PLUS   shift, and go to state 78
    TOKEN_MINUS  shift, and go to state 79

    $default  reduce using rule 36 (rel_expr)


state 49

   38 add_expr: mult_expr .
   42 mult_expr: mult_expr . TOKEN_MULTIPLY unary_expr
   43          | mult_expr . TOKEN_DIVIDE unary_expr
   44          | mult_expr . TOKEN_MODULO unary_expr

    TOKEN_MULTIPLY  shift, and go to state 80
    TOKEN_DIVIDE    shift, and go to state 81
    TOKEN_MODULO    shift, and go to state 82

    $default  reduce using rule 38 (add_expr)


state 50

   41 mult_expr: unary_expr .

    $default  reduce using rule 41 (mult_expr)


state 51

   45 unary_expr: primary_expr .

    $default  reduce using rule 45 (unary_expr)


state 52

   21 simple_statement: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 21 (simple_statement)


state 53

   22 simple_statement: TOKEN_CONTINUE TOKEN_SEMICOLON .

    $default  reduce using rule 22 (simple_statement)


state 54

   71 switch_stmt: TOKEN_SWITCH TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE case_statements TOKEN_RIGHT_BRACE

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 83
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 55

   65 while_loop: TOKEN_WHILE TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN statement

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 84
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 56

   70 do_while_loop: TOKEN_DO statement . TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_SEMICOLON

    TOKEN_WHILE  shift, and go to state 85


state 57

   60 if_stmt: TOKEN_IF TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN statement
   61 if_else_stmt: TOKEN_IF TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN statement TOKEN_ELSE statement

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 86
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 58

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN . for_init TOKEN_SEMICOLON expr TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN statement

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_INT         shift, and go to state 87
    TOKEN_CHAR        shift, and go to state 88
    TOKEN_DOUBLE      shift, and go to state 89
    TOKEN_FLOAT       shift, and go to state 90

    $default  reduce using rule 67 (for_init)

    declaration  go to state 91
    datatype     go to state 92
    assignment   go to state 93
    for_init     go to state 94


state 59

    1 program: TOKEN_INT TOKEN_MAIN TOKEN_LEFT_PAREN TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE body TOKEN_RIGHT_BRACE .

    $default  reduce using rule 1 (program)


state 60

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


state 61

   20 simple_statement: assignment TOKEN_SEMICOLON .

    $default  reduce using rule 20 (simple_statement)


state 62

   29 assignment: TOKEN_IDENTIFIER TOKEN_ASSIGN expr .

    $default  reduce using rule 29 (assignment)


state 63

   30 assignment: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr . TOKEN_RIGHT_BRACKET TOKEN_ASSIGN expr

    TOKEN_RIGHT_BRACKET  shift, and go to state 95


state 64

   28 block: TOKEN_LEFT_BRACE statements TOKEN_RIGHT_BRACE .

    $default  reduce using rule 28 (block)


state 65

   50 primary_expr: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET . expr TOKEN_RIGHT_BRACKET

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 96
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 66

   51 primary_expr: TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 97


state 67

   46 unary_expr: TOKEN_LOGICAL_NOT unary_expr .

    $default  reduce using rule 46 (unary_expr)


state 68

   75 return_stmt: TOKEN_RETURN expr TOKEN_SEMICOLON .

    $default  reduce using rule 75 (return_stmt)


state 69

   33 or_expr: or_expr TOKEN_LOGICAL_OR . and_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    and_expr      go to state 98
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 70

   35 and_expr: and_expr TOKEN_LOGICAL_AND . rel_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    rel_expr      go to state 99
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 71

   56 relational_op: TOKEN_GREATER_THAN .

    $default  reduce using rule 56 (relational_op)


state 72

   54 relational_op: TOKEN_LESS_THAN .

    $default  reduce using rule 54 (relational_op)


state 73

   52 relational_op: TOKEN_EQUAL .

    $default  reduce using rule 52 (relational_op)


state 74

   55 relational_op: TOKEN_LESS_EQUAL .

    $default  reduce using rule 55 (relational_op)


state 75

   57 relational_op: TOKEN_GREATER_EQUAL .

    $default  reduce using rule 57 (relational_op)


state 76

   53 relational_op: TOKEN_NOT_EQUAL .

    $default  reduce using rule 53 (relational_op)


state 77

   37 rel_expr: rel_expr relational_op . add_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    add_expr      go to state 100
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 78

   39 add_expr: add_expr TOKEN_PLUS . mult_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    mult_expr     go to state 101
    unary_expr    go to state 50
    primary_expr  go to state 51


state 79

   40 add_expr: add_expr TOKEN_MINUS . mult_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    mult_expr     go to state 102
    unary_expr    go to state 50
    primary_expr  go to state 51


state 80

   42 mult_expr: mult_expr TOKEN_MULTIPLY . unary_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    unary_expr    go to state 103
    primary_expr  go to state 51


state 81

   43 mult_expr: mult_expr TOKEN_DIVIDE . unary_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    unary_expr    go to state 104
    primary_expr  go to state 51


state 82

   44 mult_expr: mult_expr TOKEN_MODULO . unary_expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    unary_expr    go to state 105
    primary_expr  go to state 51


state 83

   71 switch_stmt: TOKEN_SWITCH TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE case_statements TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_PAREN  shift, and go to state 106


state 84

   65 while_loop: TOKEN_WHILE TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN statement

    TOKEN_RIGHT_PAREN  shift, and go to state 107


state 85

   70 do_while_loop: TOKEN_DO statement TOKEN_WHILE . TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_SEMICOLON

    TOKEN_LEFT_PAREN  shift, and go to state 108


state 86

   60 if_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN statement
   61 if_else_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN statement TOKEN_ELSE statement

    TOKEN_RIGHT_PAREN  shift, and go to state 109


state 87

    8 datatype: TOKEN_INT .

    $default  reduce using rule 8 (datatype)


state 88

    9 datatype: TOKEN_CHAR .

    $default  reduce using rule 9 (datatype)


state 89

   11 datatype: TOKEN_DOUBLE .

    $default  reduce using rule 11 (datatype)


state 90

   10 datatype: TOKEN_FLOAT .

    $default  reduce using rule 10 (datatype)


state 91

   69 for_init: declaration .

    $default  reduce using rule 69 (for_init)


state 92

    7 declaration: datatype . var_list TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 110

    var_list           go to state 111
    var_declaration    go to state 112
    array_declaration  go to state 113


state 93

   68 for_init: assignment .

    $default  reduce using rule 68 (for_init)


state 94

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init . TOKEN_SEMICOLON expr TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN statement

    TOKEN_SEMICOLON  shift, and go to state 114


state 95

   30 assignment: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET . TOKEN_ASSIGN expr

    TOKEN_ASSIGN  shift, and go to state 115


state 96

   50 primary_expr: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr . TOKEN_RIGHT_BRACKET

    TOKEN_RIGHT_BRACKET  shift, and go to state 116


state 97

   51 primary_expr: TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN .

    $default  reduce using rule 51 (primary_expr)


state 98

   33 or_expr: or_expr TOKEN_LOGICAL_OR and_expr .
   35 and_expr: and_expr . TOKEN_LOGICAL_AND rel_expr

    TOKEN_LOGICAL_AND  shift, and go to state 70

    $default  reduce using rule 33 (or_expr)


state 99

   35 and_expr: and_expr TOKEN_LOGICAL_AND rel_expr .
   37 rel_expr: rel_expr . relational_op add_expr

    TOKEN_GREATER_THAN   shift, and go to state 71
    TOKEN_LESS_THAN      shift, and go to state 72
    TOKEN_EQUAL          shift, and go to state 73
    TOKEN_LESS_EQUAL     shift, and go to state 74
    TOKEN_GREATER_EQUAL  shift, and go to state 75
    TOKEN_NOT_EQUAL      shift, and go to state 76

    $default  reduce using rule 35 (and_expr)

    relational_op  go to state 77


state 100

   37 rel_expr: rel_expr relational_op add_expr .
   39 add_expr: add_expr . TOKEN_PLUS mult_expr
   40         | add_expr . TOKEN_MINUS mult_expr

    TOKEN_PLUS   shift, and go to state 78
    TOKEN_MINUS  shift, and go to state 79

    $default  reduce using rule 37 (rel_expr)


state 101

   39 add_expr: add_expr TOKEN_PLUS mult_expr .
   42 mult_expr: mult_expr . TOKEN_MULTIPLY unary_expr
   43          | mult_expr . TOKEN_DIVIDE unary_expr
   44          | mult_expr . TOKEN_MODULO unary_expr

    TOKEN_MULTIPLY  shift, and go to state 80
    TOKEN_DIVIDE    shift, and go to state 81
    TOKEN_MODULO    shift, and go to state 82

    $default  reduce using rule 39 (add_expr)


state 102

   40 add_expr: add_expr TOKEN_MINUS mult_expr .
   42 mult_expr: mult_expr . TOKEN_MULTIPLY unary_expr
   43          | mult_expr . TOKEN_DIVIDE unary_expr
   44          | mult_expr . TOKEN_MODULO unary_expr

    TOKEN_MULTIPLY  shift, and go to state 80
    TOKEN_DIVIDE    shift, and go to state 81
    TOKEN_MODULO    shift, and go to state 82

    $default  reduce using rule 40 (add_expr)


state 103

   42 mult_expr: mult_expr TOKEN_MULTIPLY unary_expr .

    $default  reduce using rule 42 (mult_expr)


state 104

   43 mult_expr: mult_expr TOKEN_DIVIDE unary_expr .

    $default  reduce using rule 43 (mult_expr)


state 105

   44 mult_expr: mult_expr TOKEN_MODULO unary_expr .

    $default  reduce using rule 44 (mult_expr)


state 106

   71 switch_stmt: TOKEN_SWITCH TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN . TOKEN_LEFT_BRACE case_statements TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 117


state 107

   65 while_loop: TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN . statement

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    statement           go to state 118
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 108

   70 do_while_loop: TOKEN_DO statement TOKEN_WHILE TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN TOKEN_SEMICOLON

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 119
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 109

   60 if_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN . statement
   61 if_else_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN . statement TOKEN_ELSE statement

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    statement           go to state 120
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 110

   14 var_declaration: TOKEN_IDENTIFIER .
   15                | TOKEN_IDENTIFIER . TOKEN_ASSIGN expr
   17 array_declaration: TOKEN_IDENTIFIER . TOKEN_LEFT_BRACKET TOKEN_NUMBER TOKEN_RIGHT_BRACKET

    TOKEN_ASSIGN        shift, and go to state 121
    TOKEN_LEFT_BRACKET  shift, and go to state 122

    $default  reduce using rule 14 (var_declaration)


state 111

    7 declaration: datatype var_list . TOKEN_SEMICOLON
   13 var_list: var_list . TOKEN_COMMA var_declaration

    TOKEN_COMMA      shift, and go to state 123
    TOKEN_SEMICOLON  shift, and go to state 124


state 112

   12 var_list: var_declaration .

    $default  reduce using rule 12 (var_list)


state 113

   16 var_declaration: array_declaration .

    $default  reduce using rule 16 (var_declaration)


state 114

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON . expr TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN statement

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 125
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 115

   30 assignment: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET TOKEN_ASSIGN . expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 126
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 116

   50 primary_expr: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET .

    $default  reduce using rule 50 (primary_expr)


state 117

   71 switch_stmt: TOKEN_SWITCH TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE . case_statements TOKEN_RIGHT_BRACE

    $default  reduce using rule 72 (case_statements)

    case_statements  go to state 127


state 118

   65 while_loop: TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement .

    $default  reduce using rule 65 (while_loop)


state 119

   70 do_while_loop: TOKEN_DO statement TOKEN_WHILE TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN TOKEN_SEMICOLON

    TOKEN_RIGHT_PAREN  shift, and go to state 128


state 120

   60 if_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement .
   61 if_else_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 129

    $default  reduce using rule 60 (if_stmt)


state 121

   15 var_declaration: TOKEN_IDENTIFIER TOKEN_ASSIGN . expr

    TOKEN_NUMBER        shift, and go to state 39
    TOKEN_CHAR_LITERAL  shift, and go to state 40
    TOKEN_IDENTIFIER    shift, and go to state 41
    TOKEN_LEFT_PAREN    shift, and go to state 42
    TOKEN_LOGICAL_NOT   shift, and go to state 43

    expr          go to state 130
    or_expr       go to state 45
    and_expr      go to state 46
    rel_expr      go to state 47
    add_expr      go to state 48
    mult_expr     go to state 49
    unary_expr    go to state 50
    primary_expr  go to state 51


state 122

   17 array_declaration: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET . TOKEN_NUMBER TOKEN_RIGHT_BRACKET

    TOKEN_NUMBER  shift, and go to state 131


state 123

   13 var_list: var_list TOKEN_COMMA . var_declaration

    TOKEN_IDENTIFIER  shift, and go to state 110

    var_declaration    go to state 132
    array_declaration  go to state 113


state 124

    7 declaration: datatype var_list TOKEN_SEMICOLON .

    $default  reduce using rule 7 (declaration)


state 125

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON expr . TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN statement

    TOKEN_SEMICOLON  shift, and go to state 133


state 126

   30 assignment: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET TOKEN_ASSIGN expr .

    $default  reduce using rule 30 (assignment)


state 127

   71 switch_stmt: TOKEN_SWITCH TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE case_statements . TOKEN_RIGHT_BRACE
   73 case_statements: case_statements . TOKEN_CASE TOKEN_NUMBER TOKEN_COLON statements
   74                | case_statements . TOKEN_DEFAULT TOKEN_COLON statements

    TOKEN_RIGHT_BRACE  shift, and go to state 134
    TOKEN_CASE         shift, and go to state 135
    TOKEN_DEFAULT      shift, and go to state 136


state 128

   70 do_while_loop: TOKEN_DO statement TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 137


state 129

   61 if_else_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement TOKEN_ELSE . statement

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    statement           go to state 138
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 130

   15 var_declaration: TOKEN_IDENTIFIER TOKEN_ASSIGN expr .

    $default  reduce using rule 15 (var_declaration)


state 131

   17 array_declaration: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET TOKEN_NUMBER . TOKEN_RIGHT_BRACKET

    TOKEN_RIGHT_BRACKET  shift, and go to state 139


state 132

   13 var_list: var_list TOKEN_COMMA var_declaration .

    $default  reduce using rule 13 (var_list)


state 133

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON expr TOKEN_SEMICOLON . assignment TOKEN_RIGHT_PAREN statement

    TOKEN_IDENTIFIER  shift, and go to state 9

    assignment  go to state 140


state 134

   71 switch_stmt: TOKEN_SWITCH TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_LEFT_BRACE case_statements TOKEN_RIGHT_BRACE .

    $default  reduce using rule 71 (switch_stmt)


state 135

   73 case_statements: case_statements TOKEN_CASE . TOKEN_NUMBER TOKEN_COLON statements

    TOKEN_NUMBER  shift, and go to state 141


state 136

   74 case_statements: case_statements TOKEN_DEFAULT . TOKEN_COLON statements

    TOKEN_COLON  shift, and go to state 142


state 137

   70 do_while_loop: TOKEN_DO statement TOKEN_WHILE TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN TOKEN_SEMICOLON .

    $default  reduce using rule 70 (do_while_loop)


state 138

   61 if_else_stmt: TOKEN_IF TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN statement TOKEN_ELSE statement .

    $default  reduce using rule 61 (if_else_stmt)


state 139

   17 array_declaration: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET TOKEN_NUMBER TOKEN_RIGHT_BRACKET .

    $default  reduce using rule 17 (array_declaration)


state 140

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON expr TOKEN_SEMICOLON assignment . TOKEN_RIGHT_PAREN statement

    TOKEN_RIGHT_PAREN  shift, and go to state 143


state 141

   73 case_statements: case_statements TOKEN_CASE TOKEN_NUMBER . TOKEN_COLON statements

    TOKEN_COLON  shift, and go to state 144


state 142

   74 case_statements: case_statements TOKEN_DEFAULT TOKEN_COLON . statements

    error             shift, and go to state 8
    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    TOKEN_IDENTIFIER   [reduce using rule 3 (statements)]
    TOKEN_LEFT_BRACE   [reduce using rule 3 (statements)]
    TOKEN_RIGHT_BRACE  reduce using rule 3 (statements)
    TOKEN_RETURN       [reduce using rule 3 (statements)]
    TOKEN_BREAK        [reduce using rule 3 (statements)]
    TOKEN_CONTINUE     [reduce using rule 3 (statements)]
    TOKEN_SWITCH       [reduce using rule 3 (statements)]
    TOKEN_CASE         reduce using rule 3 (statements)
    TOKEN_WHILE        [reduce using rule 3 (statements)]
    TOKEN_DO           [reduce using rule 3 (statements)]
    TOKEN_IF           [reduce using rule 3 (statements)]
    TOKEN_FOR          [reduce using rule 3 (statements)]
    TOKEN_DEFAULT      reduce using rule 3 (statements)

    statements          go to state 145
    statement           go to state 21
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 143

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON expr TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN . statement

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    statement           go to state 146
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 144

   73 case_statements: case_statements TOKEN_CASE TOKEN_NUMBER TOKEN_COLON . statements

    error             shift, and go to state 8
    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    TOKEN_IDENTIFIER   [reduce using rule 3 (statements)]
    TOKEN_LEFT_BRACE   [reduce using rule 3 (statements)]
    TOKEN_RIGHT_BRACE  reduce using rule 3 (statements)
    TOKEN_RETURN       [reduce using rule 3 (statements)]
    TOKEN_BREAK        [reduce using rule 3 (statements)]
    TOKEN_CONTINUE     [reduce using rule 3 (statements)]
    TOKEN_SWITCH       [reduce using rule 3 (statements)]
    TOKEN_CASE         reduce using rule 3 (statements)
    TOKEN_WHILE        [reduce using rule 3 (statements)]
    TOKEN_DO           [reduce using rule 3 (statements)]
    TOKEN_IF           [reduce using rule 3 (statements)]
    TOKEN_FOR          [reduce using rule 3 (statements)]
    TOKEN_DEFAULT      reduce using rule 3 (statements)

    statements          go to state 147
    statement           go to state 21
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 145

    4 statements: statements . statement
   74 case_statements: case_statements TOKEN_DEFAULT TOKEN_COLON statements .

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    $default  reduce using rule 74 (case_statements)

    statement           go to state 60
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34


state 146

   66 for_loop: TOKEN_FOR TOKEN_LEFT_PAREN for_init TOKEN_SEMICOLON expr TOKEN_SEMICOLON assignment TOKEN_RIGHT_PAREN statement .

    $default  reduce using rule 66 (for_loop)


state 147

    4 statements: statements . statement
   73 case_statements: case_statements TOKEN_CASE TOKEN_NUMBER TOKEN_COLON statements .

    TOKEN_IDENTIFIER  shift, and go to state 9
    TOKEN_LEFT_BRACE  shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_BREAK       shift, and go to state 12
    TOKEN_CONTINUE    shift, and go to state 13
    TOKEN_SWITCH      shift, and go to state 14
    TOKEN_WHILE       shift, and go to state 15
    TOKEN_DO          shift, and go to state 16
    TOKEN_IF          shift, and go to state 17
    TOKEN_FOR         shift, and go to state 18

    $default  reduce using rule 73 (case_statements)

    statement           go to state 60
    simple_statement    go to state 22
    compound_statement  go to state 23
    block               go to state 24
    assignment          go to state 25
    conditional         go to state 26
    if_stmt             go to state 27
    if_else_stmt        go to state 28
    loop                go to state 29
    while_loop          go to state 30
    for_loop            go to state 31
    do_while_loop       go to state 32
    switch_stmt         go to state 33
    return_stmt         go to state 34
